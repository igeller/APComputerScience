// FileName:  ForLoopMania1.javapackage ch05;import java.util.Scanner;public class ForLoopMania1{	public static void main(String [] args)	{			// Part 1.  Write the code for a count-up for loop that will sum		// the integers from 101 to 200 inclusive and then print the sum only once.		int sum = 0;		for (int cntr = 101; cntr <= 200; cntr++)		{			sum += cntr;		}		System.out.println("The sum of the integers from 101 to 200 is " + sum);														System.out.println();		System.out.println();				// *******************************************************************		// Part 2.  Write the code for a count-down for loop that will reverse sum		// the integers from 200 down to 101, inclusive.  The loop should calculate		// the sum by first adding 200 to 199 to 198, etc.  The sum should be printed		// only once.		 int sumP2 = 0;				for(int cntrP2 = 200; cntrP2 >= 101; cntrP2--)		{			sumP2 += cntrP2;		}		System.out.println("The reverse sum of the integers from 200 down to 101 is " + sumP2);												System.out.println();		System.out.println();		// *******************************************************************				// Part 3. Write a count-up for loop that generates 10 random integers.		// The range is from -100 to 100 inclusive. Every time the random integer		// is generated, it will be printed right justified in a field width of 4		// after the phrase "The random number is".  If the random value generated		// is negative then it will be added to the variable negativeSum.  If the		// random value generated is positive then it will be added to positiveSum.		// The final sums should be printed only one time right justified in a field		// width of 5 after the phrases seen below for the sums.		// Here is a sample run of the program for this code segment:			/*				The random number is   -22				The random number is    31				The random number is   -63				The random number is    93				The random number is   -36				The random number is    30				The random number is    47				The random number is   -44				The random number is   -20				The random number is   -71								The sum of the positive random integers is  201				The sum of the negative random integers is -256		 */				int sumPosInt = 0;		int sumNegInt = 0;		for(int cntrP3 = 0; cntrP3 < 10; cntrP3++)		{			int randomNum = (int) ((Math.random()*200)-100);			System.out.println("The random number is " + randomNum);						if (randomNum < 0)				sumNegInt += randomNum;			else				sumPosInt += randomNum;					}				System.out.println();		System.out.println("The sum of the positive integers is " + sumPosInt);		System.out.println("The sum of the negative integers is " + sumNegInt);										System.out.println();		System.out.println();		// *******************************************************************		// Part 4:  Write a count-up for loop that will run 3 times.  Each time		// the loop runs it will ask the user for a floating-point value from		// the keyboard.  The square root will then be calculated and printed		// along with the number you are finding the square root of.  Right justify		// the number you are finding the square root of use a field width of 8		// with a precision of 3.  Right justify the square root value in a field		// width of 15 with a precision of 10.		// BY THE WAY:		// "NaN" stands for "not a number". "Nan" is produced if a floating point		// operation has some input parameters that cause the operation to produce		// some undefined result. For example, 0.0 divided by 0.0 is arithmetically		// undefined. Taking the square root of a negative number is also undefined.		// Here is a sample run of the program for this code segment:			/*				Enter a number to find its square root: 17.453				The square root of  17.453 is    4.1776787813								Enter a number to find its square root: 39.7654321				The square root of  39.765 is    6.3059838328								Enter a number to find its square root: 100.0				The square root of 100.000 is   10.0000000000		 */		Scanner reader = new Scanner(System.in);		System.out.println("This part of the program finds 3 square roots of doubles.\n");		// Write your code after this line.						//double b4Squared; 		//double sqRoot;		for (int cntrP4 = 0; cntrP4 < 3; cntrP4++)		{			System.out.println("Enter a number to find its square root: ");			double b4Squared = reader.nextDouble();				double sqRoot = Math.sqrt(b4Squared);						System.out.printf("The square root of %8.3f is %15.10f%n", b4Squared, sqRoot);			System.out.println();					}								System.out.println();		System.out.println();		// *******************************************************************		// Part 5.  CONCATENATING WORDS TO MAKE A LIST		// Write a for loop that will run five times.  Each time the loop runs		// the user will enter a player to be added to a team.  Use the String		// variables team and player provided you.		// The loop should concatenate each player to a variable named team so 		// that a blank space is between each player on the team.		// After the loop is over, print the value contained in team.  Your		// output should be the same as what is seen below in the sample for the		// players entered.  Do NOT use a printf statement for output.		// Here is a sample run of the program for this code segment:			/*			Enter the name of a player and a blank space and press return: Amy 						Enter the name of a player and a blank space and press return: Ayesha						Enter the name of a player and a blank space and press return:  Sarah 						Enter the name of a player and a blank space and press return: Irene						Enter the name of a player and a blank space and press return: Sarah						Here is your team: Amy Ayesha Sarah Irene Sarah		*/		reader.nextLine();  // consume new line character from previous code segment		System.out.println("This part of the program adds players to a team.\n");		String team = "";		String player = "";		for(int cntrP5 = 0; cntrP5 < 5; cntrP5++)		{			System.out.print("Enter the name of a player and a blank space and press return: ");			player = reader.nextLine();						team += player;					}				System.out.println("Here is your team: " + team);																// *******************************************************************				System.out.println();		System.out.println("Program Terminated.");	}}