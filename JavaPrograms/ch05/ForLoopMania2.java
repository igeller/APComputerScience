package ch05;// FileName:  ForLoopMania2.java// Conrey updated 10/25/13public class ForLoopMania2{	public static void main(String [] args) 	{		// ALERT:  SOME LOOP CONTROL VARIABLES WILL BE INT AND SOME WILL BE DOUBLE.		//         READ THE INSTRUCTIONS FOR EACH PART CAREFULLY!				// BY CONVENTION, MANY PROGRAMMERS LIKE TO USE THE LETTER i AS THEIR LOOP		// CONTROL VARIABLE.  WE WILL DO THAT ON OUR FIRST TWO PARTS AND LATER THIS		// YEAR USE i A LOT.				System.out.println();		// Part 1. FINDING THE BASE 10 LOGARITHM OF POWERS OF 10.		// Write a count-up for loop that uses the INT loop control variable i.		// Declare i inside the for loop header as an int.		// The loop will calculate and print the base 10 log value of the first		// ten powers of 10.  In other words, it will find the base 10 log of 10,		// 100, 1000, 10000, etc. 		// Use Math.log10(a) to calculate the log base 10 of a.		// Print the power of 10 and its base 10 log value using a printf statement.		// Use the following field widths and precision:		// To print the power of 10 use a field width of 20 with a precision of 2 and		// use the , format flag to place commas every 3 digits in the power of 10.		// To print the log value use a field width of 5 with a precision of 1.		/*				Here are the Base 10 Log values of the first 10 powers of 10.								The log base 10 of               10.00 is  1.0				The log base 10 of              100.00 is  2.0				The log base 10 of            1,000.00 is  3.0				The log base 10 of           10,000.00 is  4.0				The log base 10 of          100,000.00 is  5.0				The log base 10 of        1,000,000.00 is  6.0				The log base 10 of       10,000,000.00 is  7.0				The log base 10 of      100,000,000.00 is  8.0				The log base 10 of    1,000,000,000.00 is  9.0				The log base 10 of   10,000,000,000.00 is 10.0		 */		System.out.println("Here are the Base 10 Log values of the first 10 powers of 10.\n");		double mult10 = 10.0;		double logValue;				for(int i = 0; i < 10; i++ )		{			logValue = Math.log10(mult10);			System.out.printf("The log base 10 of %,20.2f is %5.1f%n", mult10, logValue);						mult10 *= 10;		}																System.out.println();		System.out.println();		// *******************************************************************				// Part 2. Square and Cube Fun!		// Write a count-up for loop that uses the loop control variable i.		// Declare i inside the for loop header as a DOUBLE loop control variable.		// (We will never use a double loop control variable except in this program.)		// The loop will calculate and print all of the squares and cubes of numbers		// from 1.0 to 3.0 in increments of 0.1.  If you initialize the loop control		// variable i to 1.0, you can square and cube i in your code.		// USE THE TWO VARIABLES square AND cube IN YOUR CODE.		// Print the squares and cubes using a printf statement. Use the following		// field widths and precision:		// To print i use a field width of 5 with a precision of 1.		// To print the square use a field width of 10 with a precision of 5.		// To print the cube use a field width of 10 with a precision of 5.		// Here is what your output should be: 		/*			The square of   1.0  is    1.00000  and the cube is    1.00000			The square of   1.1  is    1.21000  and the cube is    1.33100			The square of   1.2  is    1.44000  and the cube is    1.72800			The square of   1.3  is    1.69000  and the cube is    2.19700			The square of   1.4  is    1.96000  and the cube is    2.74400			The square of   1.5  is    2.25000  and the cube is    3.37500			The square of   1.6  is    2.56000  and the cube is    4.09600			The square of   1.7  is    2.89000  and the cube is    4.91300			The square of   1.8  is    3.24000  and the cube is    5.83200			The square of   1.9  is    3.61000  and the cube is    6.85900			The square of   2.0  is    4.00000  and the cube is    8.00000			The square of   2.1  is    4.41000  and the cube is    9.26100			The square of   2.2  is    4.84000  and the cube is   10.64800			The square of   2.3  is    5.29000  and the cube is   12.16700			The square of   2.4  is    5.76000  and the cube is   13.82400			The square of   2.5  is    6.25000  and the cube is   15.62500			The square of   2.6  is    6.76000  and the cube is   17.57600			The square of   2.7  is    7.29000  and the cube is   19.68300			The square of   2.8  is    7.84000  and the cube is   21.95200			The square of   2.9  is    8.41000  and the cube is   24.38900		 */	 		double square;		double cube;				for(double i = 1.0; i <= 3.0; i+=.1)		{			square = Math.pow(i, 2);			cube = Math.pow(i, 3);			System.out.printf("The square of %5.1f is %10.5f and the cube is %10.5f%n", i, square, cube); 		}								System.out.println();			System.out.println();				// *******************************************************************					// Part 3.  Trigonometry Fun!			// Write a count-up for loop that uses the loop control variable angle.		// Declare angle inside the for loop header as a DOUBLE loop control variable.		// The loop will compute and output the sine, cosine, and tangent of the following		// angles:  0.0, 15.0, 30.0, 45.0, 60.0, 75.0, and 90.0.		// Initialize angle to 0.0.  		// The Math class has the following methods:		//		public double sin (double radians)		//		public double cos (double radians)		//		public double tan (double radians)		// So before we call these methods and pass them radians, we need to calculate radians.		// To do this call the toRadians() method of the Math class in the line of code:		// double radians = Math.toRadians(angle);		// Now that you have radians, you can call Math.sin(radians), Math.cos(radians), or		// Math.tan(radians) to calculate and store those trig values in variables that you will declare.		// Declare and use these variables in the loop:  sine, cosine, tangent to hold the 		// calculated values.		// Print the sine, cosine, and tangent all on one line using a printf statement.		// Use the following field widths and precision:		// To print angle use a field width of 4 with a precision of 1.		// To print sine use a field width of 6 with a precision of 4.		// To print cosine use a field width of 6 with a precision of 4.		// To print tangent use a field width of 6 with a precision of 4.		// Here is what your output should be: 		/*		 	The Sine of  0.0 is 0.0000     The Cosine of  0.0 is 1.0000     The Tangent of  0.0 is 0.0000			The Sine of 15.0 is 0.2588     The Cosine of 15.0 is 0.9659     The Tangent of 15.0 is 0.2679			The Sine of 30.0 is 0.5000     The Cosine of 30.0 is 0.8660     The Tangent of 30.0 is 0.5774			The Sine of 45.0 is 0.7071     The Cosine of 45.0 is 0.7071     The Tangent of 45.0 is 1.0000			The Sine of 60.0 is 0.8660     The Cosine of 60.0 is 0.5000     The Tangent of 60.0 is 1.7321			The Sine of 75.0 is 0.9659     The Cosine of 75.0 is 0.2588     The Tangent of 75.0 is 3.7321			The Sine of 90.0 is 1.0000     The Cosine of 90.0 is 0.0000     The Tangent of 90.0 is 16331239353195370.0000			Note the unusual output for tangent of 90 ... a very large number that tries to represent infinity.		 */				double sine;		double cosine;		double tangent;				for(double angle = 0.0; angle <= 90.0; angle += 15.0)		{			double radians = Math.toRadians(angle);						sine = Math.sin(radians);			cosine = Math.cos(radians);			tangent = Math.tan(radians);						System.out.printf("The sine of %4.1f is %6.4f	", angle, sine);			System.out.printf("The Cossine of %4.1f is %6.4f	", angle, cosine);			System.out.printf("The Tangent of %4.1f is %6.4f%n", angle, tangent);		}														System.out.println();			System.out.println();				// *******************************************************************			// Part 4. CIRCLE MANIA.		// Write a for loop that uses the loop control variable radius.		// Declare radius inside the for loop header as an INT loop control variable.		// The loop will calculate and print out all of the circumferences and areas		// of circles with radii from 1 to 25 using a printf statement.  When calculating		// the area, YOU MUST USE MATH.POW() INSTEAD OF MULTIPLYING AND USE MATH.PI NOT 3.14.		// Use the following field widths and precision when right justifying all output:		// 		To print radius use a field width of 3.		// 		To print the circumference use a field width of 11 with a precision of 5.		// 		To print the area use a field width of 12 with a precision of 5.		// Here is what your output should be: 		/*	The circle with radius of  1 has a circumference of    6.28319 and an area of     3.14159	The circle with radius of  2 has a circumference of   12.56637 and an area of    12.56637	The circle with radius of  3 has a circumference of   18.84956 and an area of    28.27433	The circle with radius of  4 has a circumference of   25.13274 and an area of    50.26548	The circle with radius of  5 has a circumference of   31.41593 and an area of    78.53982	The circle with radius of  6 has a circumference of   37.69911 and an area of   113.09734	The circle with radius of  7 has a circumference of   43.98230 and an area of   153.93804	The circle with radius of  8 has a circumference of   50.26548 and an area of   201.06193	The circle with radius of  9 has a circumference of   56.54867 and an area of   254.46900	The circle with radius of 10 has a circumference of   62.83185 and an area of   314.15927	The circle with radius of 11 has a circumference of   69.11504 and an area of   380.13271	The circle with radius of 12 has a circumference of   75.39822 and an area of   452.38934	The circle with radius of 13 has a circumference of   81.68141 and an area of   530.92916	The circle with radius of 14 has a circumference of   87.96459 and an area of   615.75216	The circle with radius of 15 has a circumference of   94.24778 and an area of   706.85835	The circle with radius of 16 has a circumference of  100.53096 and an area of   804.24772	The circle with radius of 17 has a circumference of  106.81415 and an area of   907.92028	The circle with radius of 18 has a circumference of  113.09734 and an area of  1017.87602	The circle with radius of 19 has a circumference of  119.38052 and an area of  1134.11495	The circle with radius of 20 has a circumference of  125.66371 and an area of  1256.63706	The circle with radius of 21 has a circumference of  131.94689 and an area of  1385.44236	The circle with radius of 22 has a circumference of  138.23008 and an area of  1520.53084	The circle with radius of 23 has a circumference of  144.51326 and an area of  1661.90251	The circle with radius of 24 has a circumference of  150.79645 and an area of  1809.55737	The circle with radius of 25 has a circumference of  157.07963 and an area of  1963.49541		 */		// Part 4. CIRCLE MANIA.				// Write a for loop that uses the loop control variable radius.				// Declare radius inside the for loop header as an INT loop control variable.				// The loop will calculate and print out all of the circumferences and areas				// of circles with radii from 1 to 25 using a printf statement.  When calculating				// the area, YOU MUST USE MATH.POW() INSTEAD OF MULTIPLYING AND USE MATH.PI NOT 3.14.				// Use the following field widths and precision when right justifying all output:				// 		To print radius use a field width of 3.				// 		To print the circumference use a field width of 11 with a precision of 5.				// 		To print the area use a field width of 12 with a precision of 5.				// Here is what your output should be: 				/*				 * 				 */				double area;		double circumference; 				for(int radius = 1; radius <= 25; radius++)		{			circumference = Math.PI * radius*2;			area = Math.PI*(Math.pow(radius, 2));			System.out.printf("The circle with radius of %3d has a circumference of %11.5f and an area of %12.5f%n"					, radius, circumference, area);		}								 	}  // end main}