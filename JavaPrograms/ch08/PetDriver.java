package ch08;// FileName:  PetDriver.javaimport java.util.Scanner;public class PetDriver{	public static void main (String[] args)	{		// Part 1.		// Stop and write the method getDataAndConstructPet and then call it.		// here.  There is nothing to pass it.  However, it returns a Pet object		// and you will want to assign it to a new Pet variable named pet1.				System.out.println();		// Call the toString() method implicitly inside a System.out.println		// statement to print the state of the object pet1.		System.out.println();				// STOP AND RUN THE PROGRAM AND VIEW THE OUTPUT VALUES.				// ****************************************************************				// NOW YOU WILL CALL THE ACCESSOR METHODS OF THE PET CLASS		// TO GET THE INFORMATION YOU ENTERED BACK OUT OF THE PET.		// Call the appropriate accessor method to obtain the name		// of the pet and print it.  You can call the accessor method		// right inside a println statment.  Just finish the line.		//System.out.println("The name is: " + );		// Call the appropriate accessor method to obtain the type		// of the pet and print it.  You can call the accessor method		// right inside a println statment.  Just finish the line.		//System.out.println("The Type is: " + );		// Call the appropriate accessor method to obtain the age		// of the pet and print it.  You can call the accessor method		// right inside a println statment.  Just finish the line.		//System.out.println ("The Age is: " + );		// Call the appropriate accessor method to obtain the weight		// of the pet and print it.  You can call the accessor method		// right inside a println statment.  Just finish the line.		//System.out.println ("The Weight is: " + );		System.out.println();		// Call the toString() method explicitly inside a System.out.println		// statement to print the state of the object pet1.		System.out.println();						System.out.println();				// STOP AND RUN THE PROGRAM AND VIEW THE OUTPUT VALUES.				// ****************************************************************		// NOW YOU ARE GOING TO CALL THE MUTATOR METHODS.		Scanner reader = new Scanner (System.in);		// Ask for the name of the pet from the keyboard and store it in the		// variable name.  Use the value stored in name to call the appropriate		// mutator method of the Pet class and change the name of pet1 to this new value.							// Ask for the type of the pet from the keyboard and store it in the		// variable type.  Use the value stored in name to call the appropriate		// mutator method of the Pet class and change the type of pet1 to this new value.						// Ask for the age of the pet from the keyboard and store it in the		// variable age.  Use the value stored in age to call the appropriate		// mutator method of the Pet class and change the age of pet1 to this new value.						// Ask for the weight of the pet from the keyboard and store it in the		// variable weight.  Use the value stored in weight to call the appropriate		// mutator method of the Pet class and change the weight of pet1 to this new value.						System.out.println();		// Call the toString() method implicitly inside a System.out.println		// statement to print the state of the object pet1.		System.out.println();		// STOP AND RUN THE PROGRAM AND VIEW THE OUTPUT VALUES.				// ****************************************************************		System.out.println();		System.out.println("Program Terminated.");	} // end of main method	// Write the method getDataAndConstructPet that receives no parameters	// but returns a Pet object.  This method will ask for the pet's name,	// type, age, and weight and then construct a Pet object and return it.	public static Pet getDataAndConstructPet ()	{		Scanner reader = new Scanner (System.in);				System.out.print("Enter the name of the pet: ");		String petName = reader.nextLine();				System.out.print("Enter the type of pet: ");		String petType = reader.nextLine();						System.out.print("Enter the age of the pet: ");		int petAge = reader.nextInt();				System.out.print("Enter the weight of the pet: ");		double petWeight = reader.nextDouble();				Pet pet = new Pet (petName, petType, petAge, petWeight);		return pet;	}										} // end of PetDriver.java